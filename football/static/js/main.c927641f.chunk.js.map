{"version":3,"sources":["Components/StandingsGrid.jsx","records.js","Components/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["StandingsGrid","this","props","data","sort","a","b","aPct","wins","ties","losses","bPct","map","rowData","name","opponents","react_default","createElement","className","toPrecision","adam","brad","brian","chad","mike","undrafted","classNames","title","getRows","Component","ncaa","nfl","overall","line","index","Home","src_Components_StandingsGrid","App","BrowserRouter","id","NavLink","exact","to","activeClassName","Route","path","component","Scores","Draft","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c927641f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './StandingsGrid.css';\nimport classNames from 'classnames';\n\nclass StandingsGrid extends Component {\n  getRows() {\n    const sortedData = this.props.data.sort((a, b) => {\n      const aPct = (a.wins + 0.5 * a.ties) / (a.wins + a.ties + a.losses);\n      const bPct = (b.wins + 0.5 * b.ties) / (b.wins + b.ties + b.losses);\n      return a.wins === b.wins ? bPct - aPct : b.wins - a.wins;\n    });\n\n    return sortedData.map((rowData) => {\n      const { name, wins, losses, ties, opponents } = rowData;\n      return (\n        <div className='standings-grid-row'>\n          <div className='standings-grid-row-label'>\n            {name}\n          </div>\n          <div className='standings-grid-row-record'>\n            <span>{wins}</span>\n            <span>{losses}</span>\n            <span>{ties}</span>\n            <span>{((wins + 0.5*ties)/(wins+losses+ties)).toPrecision(3)}</span>\n          </div>\n          <div className='standings-grid-row-opponents'>\n            <span className='opp-label'></span>\n            <ul>\n              <li>{opponents.adam.wins + '-' + opponents.adam.losses}</li>\n              <li>{opponents.brad.wins + '-' + opponents.brad.losses}</li>\n              <li>{opponents.brian.wins + '-' + opponents.brian.losses}</li>\n              <li>{opponents.chad.wins + '-' + opponents.chad.losses}</li>\n              <li>{opponents.mike.wins + '-' + opponents.mike.losses}</li>\n              <li>{opponents.undrafted.wins + '-' + opponents.undrafted.losses}</li>\n            </ul>\n          </div>\n          <div className='clear'></div>\n        </div>\n      )\n    });\n  }\n\n  render () {\n    return (\n      <div className='standings-grid'>\n        <div className={classNames('standings-grid-row', 'standings-grid-header')}>\n          <div className='standings-grid-row-label'>\n            {this.props.title}\n          </div>\n          <div className='standings-grid-row-record'>\n            <span>W</span>\n            <span>L</span>\n            <span>T</span>\n            <span>PCT</span>\n          </div>\n          <div className='standings-grid-row-opponents'>\n            <span className='opp-label'>vs.</span>\n            <ul>\n              <li>Adam</li>\n              <li>Brad</li>\n              <li>Brian</li>\n              <li>Chad</li>\n              <li>Mike</li>\n              <li>Other</li>\n            </ul>\n          </div>\n          <div className='clear'></div>\n        </div>\n        {this.getRows()}\n      </div>\n    );\n  }\n}\n\nexport default StandingsGrid;","export const ncaa = [\n  {\n    'name': 'Adam',\n    'wins': 64,\n    'losses': 43,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 8,\n        'losses': 8\n      },\n      'brad': {\n        'wins': 10,\n        'losses': 8\n      },\n      'brian': {\n        'wins': 10,\n        'losses': 10\n      },\n      'chad': {\n        'wins': 5,\n        'losses': 5\n      },\n      'mike': {\n        'wins': 6,\n        'losses': 4\n      },\n      'undrafted': {\n        'wins': 25,\n        'losses': 8\n      }\n    }\n  },\n  {\n    'name': 'Brad',\n    'wins': 63,\n    'losses': 45,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 8,\n        'losses': 10\n      },\n      'brad': {\n        'wins': 8,\n        'losses': 8\n      },\n      'brian': {\n        'wins': 4,\n        'losses': 8\n      },\n      'chad': {\n        'wins': 5,\n        'losses': 9\n      },\n      'mike': {\n        'wins': 15,\n        'losses': 6\n      },\n      'undrafted': {\n        'wins': 23,\n        'losses': 4\n      }\n    }\n  },\n  {\n    'name': 'Brian',\n    'wins': 69,\n    'losses': 39,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 10,\n        'losses': 10\n      },\n      'brad': {\n        'wins': 8,\n        'losses': 4\n      },\n      'brian': {\n        'wins': 5,\n        'losses': 5\n      },\n      'chad': {\n        'wins': 8,\n        'losses': 10\n      },\n      'mike': {\n        'wins': 11,\n        'losses': 7\n      },\n      'undrafted': {\n        'wins': 27,\n        'losses': 3\n      }\n    }\n  },\n  {\n    'name': 'Chad',\n    'wins': 68,\n    'losses': 38,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 5,\n        'losses': 5\n      },\n      'brad': {\n        'wins': 9,\n        'losses': 5\n      },\n      'brian': {\n        'wins': 10,\n        'losses': 8\n      },\n      'chad': {\n        'wins': 7,\n        'losses': 7\n      },\n      'mike': {\n        'wins': 9,\n        'losses': 8\n      },\n      'undrafted': {\n        'wins': 28,\n        'losses': 5\n      }\n    }\n  },\n  {\n    'name': 'Mike',\n    'wins': 57,\n    'losses': 50,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 4,\n        'losses': 6\n      },\n      'brad': {\n        'wins': 6,\n        'losses': 15\n      },\n      'brian': {\n        'wins': 7,\n        'losses': 11\n      },\n      'chad': {\n        'wins': 8,\n        'losses': 9\n      },\n      'mike': {\n        'wins': 3,\n        'losses': 3\n      },\n      'undrafted': {\n        'wins': 29,\n        'losses': 6\n      }\n    }\n  }\n]\n\nexport const nfl = [\n  {\n    'name': 'Adam',\n    'wins': 22,\n    'losses': 29,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brian': {\n        'wins': 0,\n        'losses': 0\n      },\n      'chad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'mike': {\n        'wins': 0,\n        'losses': 0\n      },\n      'undrafted': {\n        'wins': 0,\n        'losses': 0\n      }\n    }\n  },\n  {\n    'name': 'Brad',\n    'wins': 24,\n    'losses': 27,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brian': {\n        'wins': 0,\n        'losses': 0\n      },\n      'chad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'mike': {\n        'wins': 0,\n        'losses': 0\n      },\n      'undrafted': {\n        'wins': 0,\n        'losses': 0\n      }\n    }\n  },\n  {\n    'name': 'Brian',\n    'wins': 31,\n    'losses': 16,\n    'ties': 2,\n    'opponents': {\n      'adam': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brian': {\n        'wins': 0,\n        'losses': 0\n      },\n      'chad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'mike': {\n        'wins': 0,\n        'losses': 0\n      },\n      'undrafted': {\n        'wins': 0,\n        'losses': 0\n      }\n    }\n  },\n  {\n    'name': 'Chad',\n    'wins': 26,\n    'losses': 23,\n    'ties': 0,\n    'opponents': {\n      'adam': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brian': {\n        'wins': 0,\n        'losses': 0\n      },\n      'chad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'mike': {\n        'wins': 0,\n        'losses': 0\n      },\n      'undrafted': {\n        'wins': 0,\n        'losses': 0\n      }\n    }\n  },\n  {\n    'name': 'Mike',\n    'wins': 24,\n    'losses': 26,\n    'ties': 1,\n    'opponents': {\n      'adam': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'brian': {\n        'wins': 0,\n        'losses': 0\n      },\n      'chad': {\n        'wins': 0,\n        'losses': 0\n      },\n      'mike': {\n        'wins': 0,\n        'losses': 0\n      },\n      'undrafted': {\n        'wins': 0,\n        'losses': 0\n      }\n    }\n  }\n]\n\nexport const overall = ncaa.map((line, index) => {\n  return {\n    name: line.name,\n    wins: line.wins + nfl[index].wins,\n    losses: line.losses + nfl[index].losses,\n    ties: line.ties + nfl[index].ties,\n    opponents: nfl[index].opponents\n  };\n})\n","import React, { Component } from 'react';\nimport './Home.css';\nimport StandingsGrid from './StandingsGrid';\nimport { ncaa, nfl, overall } from './../records';\n\nclass Home extends Component {\n  render () {\n    return (\n      <div className=\"home\">\n        <div className=\"standings\">\n          <StandingsGrid data={ncaa} title=\"NCAA\" />\n          <StandingsGrid data={nfl} title=\"NFL\" />\n          <StandingsGrid data={overall} title=\"Overall\" />\n        </div>\n        <div className=\"terms\">\n          <h2>Terms</h2>\n          <h3>Overall</h3>\n          <p>\n            Whoever finishes with the fewest wins combined between the NFL and NCAA bets will be beer bitch.\n            This goes into effect as soon as the position is clinched.\n            The beer bitch's term ends when a new beer bitch is annoited or the conclusion of the following season's Super Bowl, whichever happens first.\n          </p>\n          <p>\n            In the event of a tie for fewest wins, whoever has the lowest winning percentage is the overall loser.\n            If winning percentage is also tied, the lowest winning percentage in head-to-head matchups will be the loser.\n          </p>\n          <h3>NFL</h3>\n          <p>\n            Whoever has the most wins at the end of the regular season is the winner.\n          </p>\n          <p>\n            The winner gets to set a location for a guys' weekend. \n            The location can be any of our 5 residences (with approval from all permanent residents of the house) or another location with unanimous approval.\n            The winner is exempt from any expenses for food, drinks, or other activities that the group decides to do. \n            The only exception to this being expenses for the NCAA bet defined below if this is done as part of the guys' weekend.\n          </p>\n          <p>\n            In the event of a tie for most wins, the better winning percentage is used to determine the winner.\n            If still tied, the team with the deepest playoff run will determine the winner.\n            If that's not enough, head-to-head record will be the final tiebreaker.\n          </p>\n          <h3>NCAA</h3>\n          <p>\n            Whoever finishes the season with the most wins (including bowls, conference championships, and playoffs) is the winner.\n          </p>\n          <p>\n            Each person has preselected a shot. For one day, the winner can call the group together to do a shot at any time.\n            The winner is not responsible for any cost for ingredients of the shot.\n            For the purposes of this bet, a day is defined as the time between the winner's sleep cycles on an agreed upon time.\n          </p>\n          <h4>Shot Selections</h4>\n          <ul>\n            <li><strong>Adam</strong> Oyster Shooters w/ Bloody Mary</li>\n            <li><strong>Brad</strong> Tequila</li>\n            <li><strong>Brian</strong> Orange Creamcicle (Vanilla Vodka w/ Orange Juice)</li>\n            <li><strong>Chad</strong> Vodka Bomb</li>\n            <li><strong>Mike</strong> Malort</li>\n          </ul>\n          <p>\n            If there is a tie for most wins, the better winning percentage will determine the winner.\n            If still tied, head-to-head record will be the final tiebreaker.\n          </p>\n          <h3>Side Bet</h3>\n          <p>\n            The 6 undrafted teams are divided into two groups. The lowest win total is the loser. \n            Whoever backs the losing side has to do 40 hands when the entire group is together.\n            There is no tiebreaker, if tied, everyone will do 40 hands together.\n          </p>\n          <h4>Sides</h4>\n          <ul>\n            <li><strong>Browns, Rutgers, Oregon State</strong> Adam, Chad</li>\n            <li><strong>Colts, Illinois, Vanderbilt</strong> Brad, Brian, Mike</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, NavLink} from 'react-router-dom';\nimport Home from './Components/Home';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <div className=\"header\">\n            <ul id=\"header-menu\">\n              <NavLink exact to=\"/football/\" activeClassName='selected'><li>Home</li></NavLink>\n              <NavLink to=\"/football/scores\" activeClassName='selected'><li>Scores</li></NavLink>\n              <NavLink to=\"/football/draft\" activeClassName='selected'><li>Draft</li></NavLink>\n            </ul> \n          </div>\n          <div className=\"App\">\n            <Route exact path=\"/football/\" component={Home} />\n            <Route path=\"/football/scores\" component={Scores} />\n            <Route path=\"/football/draft\" component={Draft} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Scores = () => (\n  <div>\n    <h1>Scores</h1>\n    <p>Scoreboard will go here</p>\n  </div>\n);\n\nconst Draft = () => (\n  <div>\n    <h1>Draft</h1>\n    <p>Draft results will be displayed here</p>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}